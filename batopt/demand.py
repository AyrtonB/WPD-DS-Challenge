# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/02-demand-forecast.ipynb (unless otherwise specified).

__all__ = ['construct_df_features', 'estimate_daily_demand_quantiles']

# Cell
import numpy as np
import pandas as pd

import seaborn as sns
import matplotlib.pyplot as plt

from moepy.lowess import Lowess, quantile_model

from batopt import clean

import os
import FEAutils as hlp

# Cell
def construct_df_features(df):
    df_features = df[df.columns[df.columns.str.contains('temp_location')]].copy()

    dts = df_features.index.tz_convert('Europe/London') # We want to use the 'behavioural' timezone

    df_features['weekend'] = dts.dayofweek.isin([5, 6]).astype(int)
    df_features['hour'] = dts.hour + dts.minute/60

    return df_features

# Cell
def estimate_daily_demand_quantiles(x, y, x_pred = np.linspace(0, 23.5, 100), **model_kwargs):
    # Fitting the model
    df_quantiles = quantile_model(x, y, x_pred=x_pred, **model_kwargs)

    # Cleaning names and sorting for plotting
    df_quantiles.columns = [f'p{int(col*100)}' for col in df_quantiles.columns]
    df_quantiles = df_quantiles[df_quantiles.columns[::-1]]

    return df_quantiles